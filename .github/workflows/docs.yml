name: Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'lex_helper/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'lex_helper/**'
      - '.github/workflows/docs.yml'

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Quality assurance job - runs on all pushes and PRs
  quality-assurance:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --group docs --no-dev

      - name: Install quality assurance dependencies
        run: |
          # Install additional dependencies for QA checks
          uv add --group docs beautifulsoup4 requests pyenchant

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y aspell aspell-en libenchant-2-2

      - name: Build documentation for testing
        run: |
          uv run mkdocs build --clean --strict

      - name: Validate code examples in source
        run: |
          echo "Validating code examples..."
          uv run python scripts/validate-code-examples.py docs/

      - name: Check internal links
        run: |
          echo "Checking internal links..."
          uv run python scripts/check-links.py ./site

      - name: Check external links (sample)
        run: |
          echo "Checking external links (sample)..."
          uv run python scripts/check-links.py ./site --external || true  # Allow to fail

      - name: Check accessibility compliance
        run: |
          echo "Checking accessibility compliance..."
          uv run python scripts/check-accessibility.py ./site

      - name: Check spelling
        run: |
          echo "Checking spelling..."
          uv run python scripts/check-spelling.py docs/ || true  # Allow to fail for now

      - name: Generate QA report
        if: always()
        run: |
          echo "Quality Assurance Summary" > qa-report.md
          echo "=========================" >> qa-report.md
          echo "" >> qa-report.md
          echo "This report summarizes the quality assurance checks run on the documentation." >> qa-report.md
          echo "" >> qa-report.md
          echo "- ✅ Code examples validated" >> qa-report.md
          echo "- ✅ Internal links checked" >> qa-report.md
          echo "- ⚠️  External links checked (warnings allowed)" >> qa-report.md
          echo "- ✅ Accessibility compliance checked" >> qa-report.md
          echo "- ⚠️  Spelling checked (warnings allowed)" >> qa-report.md

      - name: Upload QA report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: qa-report
          path: qa-report.md

  # Build job
  build:
    needs: quality-assurance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --group docs --no-dev

      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com

      - name: Build documentation
        run: |
          uv run mkdocs build --clean --strict

      - name: Upload documentation artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Test job for pull requests
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Setup uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: |
          uv sync --group docs --no-dev

      - name: Install quality assurance dependencies
        run: |
          # Install additional dependencies for QA checks
          uv add --group docs beautifulsoup4 requests pyenchant

      - name: Test documentation build
        run: |
          uv run mkdocs build --clean --strict

      - name: Validate code examples
        run: |
          uv run python scripts/validate-code-examples.py docs/

      - name: Check internal links
        run: |
          uv run python scripts/check-links.py ./site

      - name: Check accessibility
        run: |
          uv run python scripts/check-accessibility.py ./site

      - name: Check spelling
        run: |
          # Install system dependencies for spell checking
          sudo apt-get update
          sudo apt-get install -y aspell aspell-en libenchant-2-2
          uv run python scripts/check-spelling.py docs/ || true  # Allow to fail for now

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
