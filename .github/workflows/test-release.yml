name: Test Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.0a1, 0.1.0b1, 0.1.0rc1, 0.1.0.dev1)'
        required: true
        type: string

jobs:
  test-release:
    name: Manual TestPyPI Release
    runs-on: ubuntu-latest
    environment: test-release
    permissions:
      id-token: write  # Required for trusted publishing to TestPyPI
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --dev

      - name: Validate and update version in pyproject.toml
        run: |
          # Validate version format (basic PEP 440 check)
          if ! uv run python -c "from packaging.version import Version; Version('${{ github.event.inputs.version }}')"; then
            echo "‚ùå Invalid version format: ${{ github.event.inputs.version }}"
            echo "Please use PEP 440 format like: 0.1.0a1, 0.1.0b1, 0.1.0rc1, or 0.1.0.dev1"
            exit 1
          fi

          # Update version for test release
          sed -i 's/version = "[^"]*"/version = "${{ github.event.inputs.version }}"/' pyproject.toml
          echo "‚úÖ Updated version to ${{ github.event.inputs.version }}"
          grep 'version = ' pyproject.toml

      - name: Build package
        run: uv build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

      - name: Test installation from TestPyPI
        run: |
          # Wait a bit for the package to be available
          sleep 30

          # Create a fresh virtual environment for testing
          python -m venv test_env
          source test_env/bin/activate

          # Install from TestPyPI
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ lex-helper==${{ github.event.inputs.version }}

          # Basic import test
          python -c "import lex_helper; print('‚úÖ Import successful')"
          python -c "from lex_helper import LexHelper, Config; print('‚úÖ Main classes import successful')"

          echo "üéâ TestPyPI release and installation test successful!"
